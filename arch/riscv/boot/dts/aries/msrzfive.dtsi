// SPDX-License-Identifier: GPL-2.0
/*
 * Device Tree Source for the MSRZFIVE RISC-V OSM common parts
 *
 * Copyright (C) 2021 Renesas Electronics Corp.
 * Copyright (C) 2023 ARIES Embedded
 */

#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>
#include <dt-bindings/gpio/gpio.h>

/* NOTE: Define as 1 to use hardware Trigger via GPIOA_7 */
#define GPIOA_7_ADC_TRG	0

/ {
	aliases {
		serial0 = &scif0;
		serial1 = &scif1;
		ethernet0 = &eth0;
		ethernet1 = &eth1;
		mmc0 = &sdhi0;
		mmc1 = &sdhi1;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
	};

	chosen {
		bootargs = "ignore_loglevel";
		stdout-path = "serial0:115200n8";
	};

	reg_1p8v: regulator0 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator1 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};

	usb0_vbus0_otg: regulator-vbus0-usb2 {
		compatible = "regulator-fixed";

		regulator-name = "USB20_OTG_VBUS";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};
};

&extal_clk {
	clock-frequency = <24000000>;
};

&sbc {
	status = "okay";

	flash@0 {
		compatible = "jedec,spi-nor";
		reg = <0>;
		spi-max-frequency = <30000000>;

		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;

		/* SPI Mode 3 */
		spi-cpol;
		spi-cpha;
		m25p,fast-read;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <2>;
			#size-cells = <2>;

			partition@0000000 {
				label = "bootloader";
				reg = <0 0x00000000 0 0x00100000>;
			};
			partition@100000 {
				label = "env";
				reg = <0 0x00100000 0 0x00020000>;
			};
			partition@120000 {
				label = "dtb";
				reg = <0 0x00120000 0 0x00020000>;
			};
			partition@140000 {
				label = "kernel";
				reg = <0 0x00140000 0 0x00600000>;
			};
			partition@740000 {
				label = "ramdisk";
				reg = <0 0x00740000 0 0x008C0000>;
			};
		};
	};
};

&sdhi0 {
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-1 = <&sdhi0_pins>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_1p8v>;
	bus-width = <8>;
	mmc-hs200-1_8v;
	non-removable;
	fixed-emmc-driver-type = <1>;
	status = "disabled";
};

&sdhi1 {
	pinctrl-0 = <&sdhi1_pins>;
	pinctrl-1 = <&sdhi1_pins>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_3p3v>;

	bus-width = <4>;
	status = "okay";
};

&eth0 {
	pinctrl-0 = <&ether0_pins>;
	pinctrl-names = "default";
	phy-handle = <&phy0>;
	phy-mode = "rgmii";
	status = "okay";

	phy0: ethernet-phy@7 {
		compatible = "ethernet-phy-id0022.1640",
				"ethernet-phy-ieee802.3-c22";
		reg = <7>;
		rxc-skew-psec = <2400>;
		txc-skew-psec = <2400>;
		rxdv-skew-psec = <0>;
		txdv-skew-psec = <0>;
		rxd0-skew-psec = <0>;
		rxd1-skew-psec = <0>;
		rxd2-skew-psec = <0>;
		rxd3-skew-psec = <0>;
		txd0-skew-psec = <0>;
		txd1-skew-psec = <0>;
		txd2-skew-psec = <0>;
		txd3-skew-psec = <0>;
	};
};

&eth1 {
	pinctrl-0 = <&ether1_pins>;
	pinctrl-names = "default";
	phy-handle = <&phy1>;
	phy-mode = "rgmii";
	status = "okay";

	phy1: ethernet-phy@7 {
		compatible = "ethernet-phy-id0022.1640",
				"ethernet-phy-ieee802.3-c22";
		reg = <7>;
		rxc-skew-psec = <2400>;
		txc-skew-psec = <2400>;
		rxdv-skew-psec = <0>;
		txdv-skew-psec = <0>;
		rxd0-skew-psec = <0>;
		rxd1-skew-psec = <0>;
		rxd2-skew-psec = <0>;
		rxd3-skew-psec = <0>;
		txd0-skew-psec = <0>;
		txd1-skew-psec = <0>;
		txd2-skew-psec = <0>;
		txd3-skew-psec = <0>;
	};
};

&scif0 {
	pinctrl-0 = <&scif0_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&scif1 {
	pinctrl-0 = <&scif1_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&i2c0 {
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&i2c1 {
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&ehci0 {
	dr_mode = "otg";
	status = "okay";
};

&ohci0 {
	dr_mode = "otg";
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&hsusb {
	dr_mode = "otg";
	status = "okay";
};

&phyrst {
	status = "okay";
};

&usb2_phy0 {
	pinctrl-0 = <&usb0_pins>;
	pinctrl-names = "default";
	vbus-supply = <&usb0_vbus0_otg>;
	status = "okay";
};

&usb2_phy1 {
	pinctrl-0 = <&usb1_pins>;
	pinctrl-names = "default";
	status = "okay";
};

&adc {
#if GPIOA_7_ADC_TRG
	pinctrl-0 = <&adc_pins>;
	pinctrl-names = "default";
#endif
	status = "okay";
};

&mtu3 {
	status = "okay";
};

&wdt0 {
	status = "okay";
	timeout-sec = <60>;
};

&ostm1 {
	status = "okay";
};

&ostm2 {
	status = "okay";
};

&pinctrl {
	sdhi0_pins: sd0 {
		sd0_data {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3",
			       "SD0_DATA4", "SD0_DATA5", "SD0_DATA6", "SD0_DATA7";
			power-source = <1800>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD", "SD0_RST#";
			power-source = <1800>;
		};

		sd0_rst {
			pins = "SD0_RST#";
			power-source = <1800>;
		};
	};

	sd1_pwr_en {
		gpio-hog;
		gpios = <RZG2L_GPIO(11, 2) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd1_pwr_en";
	};

	sdhi1_pins: sd1 {
		sd1_data {
			pins =	"SD1_DATA0", "SD1_DATA1", "SD1_DATA2",
				"SD1_DATA3";
			power-source  = <3300>;
		};

		sd1_ctrl {
			pins = "SD1_CLK", "SD1_CMD";
			power-source  = <3300>;
		};

		sd1_mux {
			pinmux = <RZG2L_PORT_PINMUX(0, 2, 1)>; /* SD1_CD */
		};
	};

	ether0_pins: eth0 {
		pinmux =
			<RZG2L_PORT_PINMUX(1, 0, 1)>, /* M2 ET0_TXC */
			<RZG2L_PORT_PINMUX(1, 1, 1)>, /* M1 ET0_TX_CTL */
			<RZG2L_PORT_PINMUX(1, 2, 1)>, /* L1 ET0_TXD0 */
			<RZG2L_PORT_PINMUX(1, 3, 1)>, /* L2 ET0_TXD1 */
			<RZG2L_PORT_PINMUX(1, 4, 1)>, /* K1 ET0_TXD2 */
			<RZG2L_PORT_PINMUX(2, 0, 1)>, /* K2 ET0_TXD3 */
			<RZG2L_PORT_PINMUX(2, 1, 1)>, /* K6 ET0_TX_ERR */
			<RZG2L_PORT_PINMUX(2, 2, 1)>, /* M3* ET0_TX_COL */
			<RZG2L_PORT_PINMUX(2, 3, 1)>, /* M6* ET0_TX_CRS */
			<RZG2L_PORT_PINMUX(3, 0, 1)>, /* N3 ET0_RXC */
			<RZG2L_PORT_PINMUX(3, 1, 1)>, /* N1 ET0_RX_CTL */
			<RZG2L_PORT_PINMUX(3, 2, 1)>, /* P2 ET0_RXD0 */
			<RZG2L_PORT_PINMUX(3, 3, 1)>, /* R3 ET0_RXD1 */
			<RZG2L_PORT_PINMUX(4, 0, 1)>, /* R2 ET0_RXD2 */
			<RZG2L_PORT_PINMUX(4, 1, 1)>, /* R1 ET0_RXD3 */
			<RZG2L_PORT_PINMUX(4, 2, 1)>, /* N2 ET0_RX_ERR */
			<RZG2L_PORT_PINMUX(4, 3, 1)>, /* T3 ET0_MDC */
			<RZG2L_PORT_PINMUX(4, 4, 1)>, /* T2 ET0_MDIO */
			<RZG2L_PORT_PINMUX(4, 5, 1)>; /* P1 ET0_LINKSTA */
	};

	ether1_pins: eth1 {
		pinmux =
			<RZG2L_PORT_PINMUX(7, 0, 1)>, /* AE18 ET1_TXC */
			<RZG2L_PORT_PINMUX(7, 1, 1)>, /* AD17 ET1_TX_CTL */
			<RZG2L_PORT_PINMUX(7, 2, 1)>, /* AD16 ET1_TXD0 */
			<RZG2L_PORT_PINMUX(7, 3, 1)>, /* AE16 ET1_TXD1 */
			<RZG2L_PORT_PINMUX(7, 4, 1)>, /* AD15 ET1_TXD2 */
			<RZG2L_PORT_PINMUX(8, 0, 1)>, /* AE15 ET1_TXD3 */
			<RZG2L_PORT_PINMUX(8, 1, 1)>, /* AE17 ET1_TX_ERR */
			<RZG2L_PORT_PINMUX(8, 2, 1)>, /* AC16 ET1_TX_COL */
			<RZG2L_PORT_PINMUX(8, 3, 1)>, /* AC15 ET1_TX_CRS */
			<RZG2L_PORT_PINMUX(8, 4, 1)>, /* AC17 ET1_RXC */
			<RZG2L_PORT_PINMUX(9, 0, 1)>, /* AC18 ET1_RX_CTL */
			<RZG2L_PORT_PINMUX(9, 1, 1)>, /* AE19 ET1_RXD0 */
			<RZG2L_PORT_PINMUX(9, 2, 1)>, /* AD19 ET1_RXD1 */
			<RZG2L_PORT_PINMUX(9, 3, 1)>, /* AE20 ET1_RXD2 */
			<RZG2L_PORT_PINMUX(10, 0, 1)>, /* AD20 ET1_RXD3 */
			<RZG2L_PORT_PINMUX(10, 1, 1)>, /* AD18 ET1_RX_ERR */
			<RZG2L_PORT_PINMUX(10, 2, 1)>, /* AC20 ET1_MDC */
			<RZG2L_PORT_PINMUX(10, 3, 1)>, /* AE21 ET1_MDIO */
			<RZG2L_PORT_PINMUX(10, 4, 1)>; /* AC19 ET1_LINKSTA */
	};

	scif0_pins: scif0 {
		pinmux =
			<RZG2L_PORT_PINMUX(6, 3, 6)>, /* RxD */
			<RZG2L_PORT_PINMUX(6, 4, 6)>; /* TxD */
	};

	scif1_pins: scif1 {
		pinmux =
			<RZG2L_PORT_PINMUX(18, 4, 6)>, /* TxD */
			<RZG2L_PORT_PINMUX(18, 5, 6)>; /* RxD */
	};

	i2c0_pins: i2c0 {
		pins = "RIIC0_SDA", "RIIC0_SCL";
		input-enable;
	};

	i2c1_pins: i2c1 {
		pins = "RIIC1_SDA", "RIIC1_SCL";
		input-enable;
	};

	usb0_pins: usb0 {
		pinmux =
			<RZG2L_PORT_PINMUX(5, 0, 1)>, /* VBUS_EN */
			<RZG2L_PORT_PINMUX(5, 2, 1)>, /* OVC */
			<RZG2L_PORT_PINMUX(5, 3, 1)>; /* OTG_ID */
	};

	usb1_pins: usb1 {
		pinmux =
			<RZG2L_PORT_PINMUX(6, 0, 1)>, /* VBUS_EN */
			<RZG2L_PORT_PINMUX(6, 1, 1)>; /* OVC */
	};

	adc_pins: adc {
		pinmux = <RZG2L_PORT_PINMUX(5, 1, 4)>; /* ADC_TRG */
	};
};
